<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Idis.WebApi</name>
    </assembly>
    <members>
        <member name="M:Idis.WebApi.EventController.CreateEvent(Idis.WebApi.CreateEventRequest)">
            <summary>
            Create or update a event
            </summary>
            <param name="model">Event info model</param>
            <returns>Status code</returns>
        </member>
        <member name="M:Idis.WebApi.EventController.DeleteEvent(System.Int32)">
            <summary>
            Delete a event
            </summary>
            <param name="evenId" example="1">Id of an event</param>
            <returns>Status code: 200, 401</returns>
        </member>
        <member name="M:Idis.WebApi.EventController.GetEvents">
            <summary>
            Get events
            </summary>
            <remarks>Get all event list</remarks>
            <returns>List of event</returns>
        </member>
        <member name="M:Idis.WebApi.EventController.GetWhitelist">
            <summary>
            Get whitelist
            </summary>
            <remarks>Get list of intern by format [src,value]</remarks>
            <returns>Dynamic object</returns>
        </member>
        <member name="M:Idis.WebApi.EventController.GetEventTypes">
            <summary>
            Get event types
            </summary>
            <remarks>Get all event types list</remarks>
            <returns>List of event type</returns>
        </member>
        <member name="M:Idis.WebApi.EventController.GetJointEvents(System.Int32)">
            <summary>
            Get joint events of a intern
            </summary>
            <remarks>Get joint events given intern Id</remarks>
            <param name="internId">Intern Id</param>
            <returns>List of joint event of a intern</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.GetIntern(System.Int32)">
            <summary>
            Get a Intern
            </summary>
            <remarks>Get a Intern given Intern Id</remarks>
            <param name="internId" example="310"></param>
            <returns>Intern model with specific info</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.CreateIntern(Idis.WebApi.CreateInternRequest)">
            <summary>
            Create or update a Intern
            </summary>
            <remarks>Create new if request have internId, else update intern info given internId</remarks>
            <param name="request">Model of a intern</param>
            <returns>True if delete success, else False</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.DeleteIntern(System.Int32)">
            <summary>
            Delete a Intern
            </summary>
            <remarks>Delete a Intern given Intern Id</remarks>
            <param name="internId" example="311"></param>
            <returns>True if delete success, else False</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.GetInternInfo(System.Int32)">
            <summary>
            Get intern info
            </summary>
            <remarks>Get intern info given internId</remarks>
            <param name="internId" example="310">Id of a intern</param>
            <returns>Intern info</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.GetInternDetail(System.Int32)">
            <summary>
            Get intern detail info
            </summary>
            <remarks>Get intern detail info given internId</remarks>
            <param name="internId" example="310">Id of a intern</param>
            <returns>Intern detail</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.GetPassedCount">
            <summary>
            Get passed count
            </summary>
            <remarks>Get number of intern passed an internship</remarks>
            <returns>Number of passed intern</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.EvaluateIntern(Idis.WebApi.EvaluateRequest)">
            <summary>
            Evaluate a intern
            </summary>
            <param name="model">Point model to evaluate</param>
            <returns>Done or fail</returns>
        </member>
        <member name="M:Idis.WebApi.InternController.GetJointTrainings(System.Int32)">
            <summary>
            Get Training list of a intern
            </summary>
            <remarks>Awesomeness!</remarks>
            <param name="internId" example="310">The intern id</param>
            <response code="200">List has been retrieved</response>
            <response code="400">Bad request, please try later</response>
        </member>
        <member name="M:Idis.WebApi.QuestionController.GetQuestion(System.Int32)">
            <summary>
            Get a question
            </summary>
            <param name="id">Question Id</param>
        </member>
        <member name="M:Idis.WebApi.QuestionController.UpdateQuestion(Idis.WebApi.CreateQuestionRequest)">
            <summary>
            Create or update a question
            </summary>
            <param name="model">Question model</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Idis.WebApi.QuestionController.DeleteQuestion(System.Int32)">
            <summary>
            Delete a question
            </summary>
            <param name="id">Question Id</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Idis.WebApi.TrainingController.GetTraining(System.Int32)">
            <summary>
            Get training content
            </summary>
            <remarks>Get training content given Training Id</remarks>
            <param name="trainingId" example="1">Training Id</param>
            <returns>Training data content</returns>
        </member>
        <member name="M:Idis.WebApi.TrainingController.UpdateTraining(Idis.Application.TrainingModel)">
            <summary>
            Update a training
            </summary>
        </member>
        <member name="M:Idis.WebApi.TrainingController.DeleteTraining(System.Int32)">
            <summary>
            Delete a training
            </summary>
            <param name="trainingId" example="100"></param>
        </member>
        <member name="M:Idis.WebApi.TrainingController.InsertTraining(Idis.Application.TrainingModel)">
            <summary>
            Create a training
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Idis.WebApi.UserController.GetUser">
            <summary>
            Get curent user info
            </summary>
            <remarks>Get current user info given userId</remarks>
            <returns>A user with specific info</returns>
        </member>
        <member name="M:Idis.WebApi.UserController.DeleteUser(System.Int32)">
            <summary>
            Delete a user
            </summary>
            <remarks>Delete a user given UserId</remarks>
            <param name="userId" example="2">User Id</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Idis.WebApi.UserController.UserList">
            <summary>
            Retrieves a list of User
            </summary>
            <remarks>Awesomeness!</remarks>
            <response code="200">Retrieved list of existing users in the system</response>
        </member>
        <member name="M:Idis.WebApi.UserController.Authenticate(Idis.WebApi.AuthenticationRequest)">
            <summary>
            Validate user access
            </summary>
            <remarks>Awesomeness!</remarks>
            <response code="200">Successful Authentication</response>
            <response code="501">Username or password is incorrect</response>
            <response code="400">Username or password is is invalid</response>
        </member>
        <member name="M:Idis.WebApi.UserController.Register(Idis.WebApi.RegisterRequest)">
            <summary>
            New user account registration
            </summary>
            <remarks>
            Create a user account in Idis
            </remarks>
            <param name="model">The user model</param>
            <response code="200">Successful registration</response>
            <response code="500">Oops! Can't register your info right now</response>
        </member>
        <member name="M:Idis.WebApi.UserController.UserUpdatePassword(Idis.WebApi.PasswordUpdateRequest)">
            <summary>
            Update password
            </summary>
            <remarks>Update password given User Id</remarks>
            <param name="model">Password update model</param>
            <returns>Status code: 200, 400 or 500</returns>
        </member>
        <member name="M:Idis.WebApi.UserController.GetProfileValue(System.Int32)">
            <summary>
            Get profile complete value
            </summary>
            <param name="userId" example="3"></param>
        </member>
        <member name="M:Idis.WebApi.UserController.GetUserStatus">
            <summary>
            Get user status
            </summary>
        </member>
        <member name="M:Idis.WebApi.UserController.SetUserStatus(Idis.WebApi.StatusRequest)">
            <summary>
            Update user status
            </summary>
        </member>
        <member name="M:Idis.WebApi.UserController.CountByIndex(System.Int32)">
            <summary>
            Count rows in a table/schema
            </summary>
            <remarks>
            Possible values are:
            
                 1 : Departments,
                 2 : Events,
                 3 : EventTypes,
                 4 : Interns,
                 5 : Organizations,
                 6 : Points,
                 7 : Questions,
                 8 : Trainings,
                 9 : Users
            </remarks>
            <param name="index" example="4">Id of schema to count</param>
            <returns>Number of rows given table index</returns>
        </member>
        <member name="T:Idis.WebApi.AuthorizeAttribute">
            <summary>
            Specifies that the class or method that this attribute is applied to requires the specified authorization.
            </summary>
        </member>
        <member name="M:Idis.WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:Idis.WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
        </member>
    </members>
</doc>
